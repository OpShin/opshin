name: Python package
on:
  push:
    tags:
      - "*.*.*"
jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      primary-version: ${{ steps.get-versions.outputs.primary-version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Get Python versions
      id: get-versions
      uses: ./.github/actions/get-python-versions

  build:
    needs: get-python-versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      # If there isn't a release for this version, create a new one.
      - uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          makeLatest: true
          prerelease: false
          skipIfReleaseExists: true
      # Build and publish the package to pypi.
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v2.1
        with:
          python_version: ${{ needs.get-python-versions.outputs.primary-version }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          package_directory: "opshin"
          poetry_install_options: "--without dev"
      # add executables to the release
      - name: Install jq
        uses: dcarbone/install-jq-action@v3.2.0
      - name: Trigger executable build
        run: |
          curl -L \
           -H "Accept: application/vnd.github+json" \
           -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
           https://api.github.com/repos/opshin/opshin/releases/latest > datafile.json
          jq -r '.tag_name' < datafile.json > tag_name
          jq -r '.upload_url' < datafile.json > upload_url
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/opshin/opshin/dispatches \
            -d '{"event_type":"trigger_binary_build","client_payload":{"ref":"'"$(cat tag_name)"'","upload_url":"'"$(cat upload_url)"'"}}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
