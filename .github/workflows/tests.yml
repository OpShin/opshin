name: Tests & QA

on:
  push:
    branches:
      - '**'
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/tests.yml'
      - '.github/scripts/run-tests.sh'
      - '.github/actions/get-python-versions/**'
  pull_request:
    branches:
      - '**'
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/tests.yml'
      - '.github/scripts/run-tests.sh'
      - '.github/actions/get-python-versions/**'

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      maximum-version: ${{ steps.get-versions.outputs.maximum-version }}
      minimum-version: ${{ steps.get-versions.outputs.minimum-version }}
      other-versions: ${{ steps.get-versions.outputs.other-versions }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Get Python versions
      id: get-versions
      uses: ./.github/actions/get-python-versions

  test-primary:
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "${{ needs.get-python-versions.outputs.maximum-version }}"
          - "${{ needs.get-python-versions.outputs.minimum-version }}"
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install project
      run: poetry install --no-interaction --with dev

    - name: Run tests
      run: bash .github/scripts/run-tests.sh

    - name: Upload coverage data to coveralls.io
      run: |
        poetry run pip install --upgrade coveralls || true
        poetry run coveralls || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true

  test-other:
    needs: [get-python-versions, test-primary]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJSON(needs.get-python-versions.outputs.other-versions) }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install project
      run: poetry install --no-interaction --with dev

    - name: Run tests
      run: bash .github/scripts/run-tests.sh

    - name: Upload coverage data to coveralls.io
      run: |
        poetry run pip install --upgrade coveralls || true
        poetry run coveralls || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true

  coveralls:
      name: Indicate completion to coveralls.io
      needs: [test-primary, test-other]
      runs-on: ubuntu-latest
      container: python:3-slim
      steps:
      - name: Install coveralls
        run: pip3 install --upgrade coveralls
      - name: Finished
        run: coveralls --finish || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}