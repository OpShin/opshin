# Binary Size Tracker Configuration
#
# This file defines which contracts to track for binary size regression.
# Each contract should be a simple smart contract that represents different
# complexity levels and common patterns.

contracts:
  - name: "liquidity_pool"
    path: "examples/smart_contracts/liquidity_pool.py"
    purpose: "spending"
    description: "Simple DEX pool"

  - name: "assert_sum"
    path: "examples/smart_contracts/assert_sum.py"
    purpose: "spending"
    description: "Simple spending validator with assertion"
    
  - name: "marketplace"
    path: "examples/smart_contracts/marketplace.py"
    purpose: "spending"
    description: "Marketplace contract with complex data structures"
    
  - name: "gift"
    path: "examples/smart_contracts/gift.py"
    purpose: "spending"
    description: "Gift contract with simple logic"

  - name: "wrapped_token"
    path: "examples/smart_contracts/wrapped_token.py"
    purpose: "spending"
    extra_flags: ["-fforce-three-params"]
    description: "Dual-use contract to generate a wrapped token"

  - name: "micropayments"
    path: "examples/smart_contracts/micropayments.py"
    purpose: "spending"
    description: "Channel for fee-less micropayments"

# Optimization levels to test
optimization_levels: ["O0", "O1", "O2", "O3"]
ignore_warnings: ["O0", "O1"]

# Thresholds for reporting (percentages)
thresholds:
  warning: 5.0     # Warn if size changes by more than 5%
  significant: 10.0 # Mark as significant if size changes by more than 10%