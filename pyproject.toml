[tool.poetry]
name = "opshin"
version = "0.24.1"
description = "A simple pythonic programming language for Smart Contracts on Cardano"
authors = ["nielstron <n.muendler@web.de>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/opshin/opshin"
documentation = "https://opshin.opshin.dev/"
keywords = ["python", "language", "programming-language", "compiler", "validator", "smart-contracts", "cardano"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Compilers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [{include = "opshin"}]

[tool.poetry.dependencies]
python = ">=3.9.0, <3.12"
uplc = "^1.0.7"
pluthon = "^1.1.0"
pycardano = "^0.12.0"
frozenlist2 = "^1.0.0"
ordered-set = "^4.1.0"


[tool.poetry.group.dev.dependencies]
hypothesis = "^6.98.2"
parameterized = "^0.9.0"
black = "^24.4.0"
pre-commit = "^3.3.2"
coverage = "<8.0"
pytest = ">=7.3.1,<9.0.0"
coveralls = "^4.0.1"
poetry-bumpversion = "^0.3.0"

[tool.poetry.scripts]
opshin = "opshin.__main__:main"

[tool.poetry_bumpversion.file."opshin/__init__.py"]

[build-system]
requires = ["setuptools", "poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source = ["opshin"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Don't complain about missing debug-only code:
    "def __repr__",
    ]

ignore_errors = true

